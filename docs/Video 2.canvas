{
	"nodes":[
		{"id":"b9fb3a07c3c52a4c","x":-299,"y":9,"width":250,"height":60,"type":"text","text":"Instrument\n(map note to sample)"},
		{"id":"32e037a08f155d7b","x":-931,"y":-1065,"width":1191,"height":621,"type":"group","label":"Research"},
		{"id":"5dd46df3a594609a","x":-911,"y":-561,"width":287,"height":85,"type":"text","text":"- Lets you load soundfonts\n- Coupled with `musicpy`"},
		{"id":"14e5e1f933333913","x":-911,"y":-961,"width":400,"height":400,"type":"link","url":"https://pypi.org/project/sf2-loader/"},
		{"id":"5251af96ca525964","x":-490,"y":-961,"width":716,"height":400,"type":"text","text":"Musescore has sf3 but it's early  \n  \nMaybe extract sf2 samples and use?  \n  \nSf2 spec - 87 pg PDF from 1998\nhttp://www.synthfont.com/SFSPEC21.PDF\n  \nInstrument = collection of samples?  \nMaybe add zip support eventually? Skip sf2 altogether  \n  \nTo superimpose two audio files, basically just add the raw data?  \n[https://stackoverflow.com/questions/4039158/mixing-two-audio-files-together-with-python](https://stackoverflow.com/questions/4039158/mixing-two-audio-files-together-with-python\nDepend on wave, numpy to get/manipulate raw sound data"},
		{"id":"0f36709f7e47bf2d","x":-911,"y":-1045,"width":763,"height":59,"type":"text","text":"# Research: SoundFonts, MIDI Instruments"},
		{"id":"16dba8c61efe32a8","x":-931,"y":-1359,"width":640,"height":246,"type":"group","label":"Recap"},
		{"id":"5f3d49c5102cab32","x":-911,"y":-1193,"width":326,"height":60,"type":"text","text":"Working CLI + some fancy ideas"},
		{"id":"0a05370012d814fa","x":-911,"y":-1253,"width":326,"height":60,"type":"text","text":"## Where we left off"},
		{"id":"b88a5c1c53337427","x":-911,"y":-1339,"width":600,"height":68,"type":"text","text":"# Coding a Plaintext DAW 2"},
		{"id":"2b21fd353b49d1b4","x":-906,"y":-373,"width":1837,"height":692,"type":"group","label":"New Config Format Design"},
		{"id":"bfb2b1c250c27ddc","x":-886,"y":102,"width":250,"height":60,"type":"text","text":"Sample"},
		{"id":"100d9f3283ed5296","x":-577,"y":102,"width":250,"height":60,"type":"text","text":"Note"},
		{"id":"e9ff361eb42403d2","x":-763,"y":-272,"width":250,"height":60,"type":"text","text":"Song"},
		{"id":"514ddc1985a179c6","x":-609,"y":-146,"width":250,"height":60,"type":"text","text":"Pattern"},
		{"id":"959b8f250d0cbbde","x":-886,"y":-353,"width":481,"height":60,"type":"text","text":"## A More Complete Format?"},
		{"id":"7f18cb2e5bdf23a4","x":-911,"y":349,"width":334,"height":117,"type":"text","text":"Future Idea ðŸ’¡\nTrack for \"performance\"\nAuto-increment \"takes\""},
		{"id":"79dd5a6adfcb1df2","x":-17,"y":-346,"width":920,"height":652,"type":"text","text":"```yaml\npiano:\n  type: instrument\n  samples:\n    a:\n      path: piano/a.wav\n    b:\n      path: piano/b.wav\npattern1:\n  type: pattern\n  instrument: piano\n  notes:\n\t- value: a\n\t  length: 1\n\t- value: b\n\t  length: 2\nsong:\n  type: song\n  output: 'song.wav'\n  bpm: 100\n  sample_rate: 44100\n  samples:\n    - path: voice/clip1.wav\n      start: 2 # start on measure 2\n  patterns:\n    - name: pattern1\n      start: 1 # start measure\n      repeat: 0 # how many copies after the original one\n```"},
		{"id":"9488de87fbb1d050","x":226,"y":-86,"width":650,"height":104,"type":"text","text":"```music-abc\na,2 b,4\n```"},
		{"id":"bcb5ade020e641c9","x":-906,"y":526,"width":1323,"height":261,"type":"group","label":"Next Actions"},
		{"id":"aaab936c8747d213","x":-885,"y":555,"width":367,"height":63,"color":"4","type":"text","text":"Add this canvas to `docs` folder in repo\nMake `docs` an Obsidian vault"},
		{"id":"2680e7d5c8659b50","x":-174,"y":556,"width":250,"height":60,"color":"4","type":"text","text":"Find or create a free piano wav of a note"},
		{"id":"84032d44b097fcfd","x":-477,"y":556,"width":250,"height":60,"color":"4","type":"text","text":"Paste/commit new config"},
		{"id":"0af1acc8a1bbe2bd","x":-901,"y":850,"width":250,"height":60,"type":"text","text":"Finding Piano Samples"},
		{"id":"d51435875e9aa7f0","x":-174,"y":707,"width":250,"height":60,"type":"text","text":"Render config w/o timing"},
		{"id":"e4c1ff24bc69ac54","x":-885,"y":707,"width":250,"height":60,"type":"text","text":"Write a single note, config or not, to wav"},
		{"id":"93561d61864c7a0f","x":-518,"y":707,"width":250,"height":60,"type":"text","text":"Write two notes"},
		{"id":"a6ca1916ad7e5488","x":-901,"y":910,"width":400,"height":400,"type":"link","url":"https://musical-artifacts.com/artifacts/403"},
		{"id":"8ed0d813ec5def53","x":-501,"y":910,"width":400,"height":400,"type":"link","url":"https://creativecommons.org/licenses/by/4.0/deed.en"},
		{"id":"d67e58384324c923","x":-901,"y":1310,"width":625,"height":50,"type":"text","text":"Maybe eventually: can use [Soundfile](https://pypi.org/project/soundfile/) lib in Python for .ogg files"},
		{"id":"67deb7c0d381abcd","x":114,"y":556,"width":250,"height":60,"type":"text","text":"Read a note in config from wav file"},
		{"id":"766f6166f8c96806","x":147,"y":707,"width":250,"height":60,"type":"text","text":"Add timing"},
		{"id":"b6b6991695a3cc20","x":-269,"y":-1355,"width":504,"height":50,"type":"text","text":"Config Magic with Python Dataclasses | Plaintext DAW 2"},
		{"id":"52390691284abdd3","x":-269,"y":-1305,"width":504,"height":178,"type":"text","text":"### Timestamps\n0:00 Intro\n0:26 Research: Soundfont, MIDI\n2:50 Design: Config\n5:29 Future Idea: Performances, Takes\n5:52 Next Actions\n7:25 Coding"}
	],
	"edges":[
		{"id":"59afa83b3cba1bd4","fromNode":"b9fb3a07c3c52a4c","fromSide":"bottom","toNode":"bfb2b1c250c27ddc","toSide":"bottom","label":"has many"},
		{"id":"55387f2e68ed7758","fromNode":"514ddc1985a179c6","fromSide":"bottom","toNode":"b9fb3a07c3c52a4c","toSide":"top","label":"has one"},
		{"id":"2cfce77b1d2c7913","fromNode":"e9ff361eb42403d2","fromSide":"bottom","toNode":"bfb2b1c250c27ddc","toSide":"top","label":"has many"},
		{"id":"d4b60e92fe54c85a","fromNode":"514ddc1985a179c6","fromSide":"bottom","toNode":"100d9f3283ed5296","toSide":"top","label":"has many"},
		{"id":"271c73d695a0ae8b","fromNode":"e9ff361eb42403d2","fromSide":"bottom","toNode":"514ddc1985a179c6","toSide":"top","label":"has many"},
		{"id":"52a741942e7a586b","fromNode":"aaab936c8747d213","fromSide":"right","toNode":"84032d44b097fcfd","toSide":"left"},
		{"id":"2dc16f3c6b6a1917","fromNode":"2680e7d5c8659b50","fromSide":"right","toNode":"67deb7c0d381abcd","toSide":"left"},
		{"id":"114bd9691108047b","fromNode":"84032d44b097fcfd","fromSide":"right","toNode":"2680e7d5c8659b50","toSide":"left"},
		{"id":"bd06040fb732806d","fromNode":"67deb7c0d381abcd","fromSide":"bottom","toNode":"e4c1ff24bc69ac54","toSide":"top"},
		{"id":"e47ab283883a624c","fromNode":"d51435875e9aa7f0","fromSide":"right","toNode":"766f6166f8c96806","toSide":"left"},
		{"id":"f4c0d889b3fd3675","fromNode":"93561d61864c7a0f","fromSide":"right","toNode":"d51435875e9aa7f0","toSide":"left"},
		{"id":"02c31d8b5988dbaf","fromNode":"e4c1ff24bc69ac54","fromSide":"right","toNode":"93561d61864c7a0f","toSide":"left"}
	]
}